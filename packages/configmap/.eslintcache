[{"C:\\workspace\\grafical-alarm-display-mono\\packages\\livemap\\src\\App.tsx":"1","C:\\workspace\\grafical-alarm-display-mono\\packages\\livemap\\src\\reportWebVitals.ts":"2","C:\\workspace\\grafical-alarm-display-mono\\packages\\livemap\\src\\index.tsx":"3","C:\\workspace\\grafical-alarm-display-mono\\packages\\livemap\\src\\serviceWorker.ts":"4","C:\\workspace\\grafical-alarm-display-mono\\packages\\configmap\\src\\App.tsx":"5","C:\\workspace\\grafical-alarm-display-mono\\packages\\configmap\\src\\index.tsx":"6","C:\\workspace\\grafical-alarm-display-mono\\packages\\configmap\\src\\tempdata.ts":"7","C:\\workspace\\grafical-alarm-display-mono\\packages\\configmap\\src\\Components\\ImageUploader\\styles.ts":"8","C:\\workspace\\grafical-alarm-display-mono\\packages\\configmap\\src\\Components\\ImageUploader\\index.tsx":"9","C:\\workspace\\grafical-alarm-display-mono\\packages\\configmap\\src\\hooks\\useData.ts":"10"},{"size":6233,"mtime":1606415879594,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1606148633511,"results":"13","hashOfConfig":"12"},{"size":945,"mtime":1606389176306,"results":"14","hashOfConfig":"12"},{"size":5295,"mtime":1606389161966,"results":"15","hashOfConfig":"12"},{"size":8033,"mtime":1607954677646,"results":"16","hashOfConfig":"17"},{"size":1328,"mtime":1607955384956,"results":"18","hashOfConfig":"17"},{"size":4782,"mtime":1607414611959,"results":"19","hashOfConfig":"17"},{"size":82,"mtime":1607511201047,"results":"20","hashOfConfig":"17"},{"size":4947,"mtime":1608194739858,"results":"21","hashOfConfig":"17"},{"size":4768,"mtime":1608138962470,"results":"22","hashOfConfig":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"hgrvyu",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"13b7wzc",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\workspace\\grafical-alarm-display-mono\\packages\\livemap\\src\\App.tsx",["44","45","46","47","48"],"C:\\workspace\\grafical-alarm-display-mono\\packages\\livemap\\src\\reportWebVitals.ts",[],"C:\\workspace\\grafical-alarm-display-mono\\packages\\livemap\\src\\index.tsx",[],"C:\\workspace\\grafical-alarm-display-mono\\packages\\livemap\\src\\serviceWorker.ts",[],"C:\\workspace\\grafical-alarm-display-mono\\packages\\configmap\\src\\App.tsx",["49","50","51","52","53","54"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport { useDrag, useDrop } from 'react-dnd'\r\n\r\nimport { getEmptyImage } from 'react-dnd-html5-backend';\r\nimport { Select } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport SettingsRemoteIcon from '@material-ui/icons/SettingsRemote';\r\n\r\nimport {\r\n    DragLayer,\r\n    DraggableNode,\r\n    Point,\r\n    requestsState,\r\n    ERequestStatus\r\n} from '@kimfrost/shared';\r\n\r\nimport './App.scss';\r\n\r\nimport ImageUploader from './Components/ImageUploader';\r\nimport useData from './hooks/useData';\r\nimport { useRecoilState } from 'recoil';\r\n\r\n\r\ninterface INavItemProps {\r\n    id: string,\r\n    type: string,\r\n    active: boolean\r\n}\r\n\r\nconst NavItem: React.FC<INavItemProps> = ({ id, type, active, children }) => {\r\n    const [{ isDragging }, drag, preview] = useDrag({\r\n        item: { id, type, active, children },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging()\r\n        }),\r\n        // end: (item, monitor) => {\r\n        //     const dropResult = monitor.getDropResult();\r\n        //     if (dropResult) {\r\n        //         const { name } = dropResult;\r\n        //         console.log('dropResult', dropResult, item)\r\n        //     }\r\n        // }\r\n    })\r\n\r\n    useEffect(() => {\r\n        preview(getEmptyImage(), { captureDraggingState: true })\r\n    }, [])\r\n\r\n    return (\r\n        <div ref={drag}\r\n            className={['app__aside-item', (active ? 'app__aside-item--active' : null)].join(' ')}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [request] = useRecoilState(requestsState('locationImage'))\r\n    const imageRef = useRef<HTMLImageElement>(null);\r\n    const {\r\n        locations,\r\n        selectedLocation,\r\n        setSelectedLocation,\r\n        points,\r\n        setPoints,\r\n        imageSrc,\r\n        savePoint\r\n    } = useData()\r\n\r\n\r\n\r\n    const [{ }, dropTarget] = useDrop({\r\n        accept: ['NAVITEM', 'POINT'],\r\n\r\n        drop: (item: any, monitor) => {\r\n            const delta = monitor.getDifferenceFromInitialOffset(); // mouse delta\r\n            //const initLocalOffset = monitor.getInitialSourceClientOffset(); // point offset when drag started\r\n            const initLocalOffset = monitor.getInitialClientOffset(); // mouse offset when drag started\r\n            //const vPos = monitor.getClientOffset();\r\n            if (imageRef && imageRef.current && delta && initLocalOffset) {\r\n\r\n                const vPos = { x: initLocalOffset.x + delta.x, y: initLocalOffset.y + delta.y }\r\n                const targetRect = imageRef.current.getBoundingClientRect();\r\n                const [x, y] = [vPos.x - targetRect.left, vPos.y - targetRect.top];\r\n\r\n                setPoints(points.map(point => {\r\n                    if (point.Id === item.id) {\r\n                        if (imageRef && imageRef.current) {\r\n                            point.Position = [x / targetRect.width, y / targetRect.height];\r\n                            point.IsActive = true;\r\n                        }\r\n                    }\r\n                    return point\r\n                }))\r\n                const point = points.find(point => point.Id === item.id);\r\n                if (point) savePoint(point)\r\n            }\r\n        }\r\n    })\r\n\r\n    const [{ canDrop, isOver }, dropDeleteTarget] = useDrop({\r\n        accept: ['POINT'],\r\n        options: {\r\n\r\n        },\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n        canDrop: (item, monitor) => {\r\n            return (item.type === 'POINT')\r\n        },\r\n        drop: (item: any, monitor) => {\r\n            //const result = monitor.getDropResult() // should drop handler return result?\r\n            setPoints(points.map(point => {\r\n                if (point.Id === item.id) {\r\n                    point.IsActive = false;\r\n                }\r\n                return point\r\n            }))\r\n            const point = points.find(point => point.Id === item.id);\r\n            if (point) savePoint(point)\r\n        }\r\n    })\r\n\r\n    const getFileFromInput = (file: File): Promise<any> => {\r\n        return new Promise(function (resolve, reject) {\r\n            const reader = new FileReader();\r\n            reader.onerror = reject;\r\n            reader.onload = function () { resolve(reader.result); };\r\n            reader.readAsBinaryString(file); // here the file can be read in different way Text, DataUrl, ArrayBuffer\r\n        });\r\n    }\r\n\r\n    const manageUploadedFile = (binary: String, file: File) => {\r\n        console.log(`The file size is ${binary.length}`);\r\n        console.log(`The file name is ${file.name}`);\r\n    }\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"app__body\">\r\n                <div className={[\r\n                    'app__aside',\r\n                    canDrop ? 'app__aside--accept' : null,\r\n                    (canDrop && isOver) ? 'app__aside--drop' : null\r\n                ].join(' ')} ref={dropDeleteTarget}>\r\n                    {points.map((point, index) => (\r\n                        <NavItem\r\n                            key={index}\r\n                            id={point.Id}\r\n                            active={point.IsActive}\r\n                            type=\"NAVITEM\"\r\n                        >\r\n                            <Point>\r\n                                <SettingsRemoteIcon fontSize=\"inherit\" />\r\n                            </Point>\r\n                            {point.Id}\r\n                        </NavItem>\r\n                    ))}\r\n                </div>\r\n                <div className=\"app__controls\">\r\n                    <Select value={selectedLocation ? (selectedLocation as any).id : null} variant=\"outlined\" onChange={(e) => {\r\n                        const location = locations.find(location => (location as any).id === e.target.value);\r\n                        if (location) {\r\n                            setSelectedLocation(location)\r\n                        }\r\n                    }}>\r\n                        {locations.map(location => (\r\n                            <MenuItem key={(location as any).id} value={(location as any).id}>{(location as any).id}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n\r\n                    <ImageUploader id={selectedLocation?.id} />\r\n\r\n                </div>\r\n                <div className=\"app__map\">\r\n                    {request && request.status === ERequestStatus.PENDING &&\r\n                        <div>Loading</div>\r\n                    }\r\n                     {request && request.status === ERequestStatus.ERROR &&\r\n                        <div>Could not load image</div>\r\n                    }\r\n                    {request && request.status === ERequestStatus.SUCCESS &&\r\n                        <div className=\"app__image\" ref={(ref) => {\r\n                            dropTarget(ref);\r\n                        }}>\r\n                            <div\r\n                                className=\"app__points\">\r\n                                {points.map((point, index) => (\r\n                                    point.IsActive ?\r\n                                        <DraggableNode key={index} id={point.Id} left={point.Position[0]} top={point.Position[1]}>\r\n                                            <Point>\r\n                                                {/* {point.Id} */}\r\n                                                <SettingsRemoteIcon fontSize=\"inherit\" />\r\n                                            </Point>\r\n                                        </DraggableNode>\r\n                                        : null\r\n                                ))}\r\n                            </div>\r\n                            <DragLayer />\r\n                            <img src={imageSrc} alt=\"\" ref={imageRef} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","C:\\workspace\\grafical-alarm-display-mono\\packages\\configmap\\src\\index.tsx",[],"C:\\workspace\\grafical-alarm-display-mono\\packages\\configmap\\src\\tempdata.ts",[],"C:\\workspace\\grafical-alarm-display-mono\\packages\\configmap\\src\\Components\\ImageUploader\\styles.ts",[],"C:\\workspace\\grafical-alarm-display-mono\\packages\\configmap\\src\\Components\\ImageUploader\\index.tsx",["55"],"C:\\workspace\\grafical-alarm-display-mono\\packages\\configmap\\src\\hooks\\useData.ts",["56","57","58","59","60","61"],{"ruleId":"62","severity":1,"message":"63","line":1,"column":28,"nodeType":"64","messageId":"65","endLine":1,"endColumn":34},{"ruleId":"62","severity":1,"message":"66","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":14},{"ruleId":"67","severity":1,"message":"68","line":44,"column":8,"nodeType":"69","endLine":44,"endColumn":34,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":61,"column":8,"nodeType":"69","endLine":61,"endColumn":27,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":88,"column":41,"nodeType":"75","messageId":"76","endLine":88,"endColumn":43},{"ruleId":"62","severity":1,"message":"77","line":1,"column":36,"nodeType":"64","messageId":"65","endLine":1,"endColumn":44},{"ruleId":"62","severity":1,"message":"78","line":31,"column":14,"nodeType":"64","messageId":"65","endLine":31,"endColumn":24},{"ruleId":"67","severity":1,"message":"79","line":47,"column":8,"nodeType":"69","endLine":47,"endColumn":10,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":75,"column":12,"nodeType":"83","messageId":"84","endLine":75,"endColumn":15},{"ruleId":"62","severity":1,"message":"85","line":129,"column":11,"nodeType":"64","messageId":"65","endLine":129,"endColumn":27},{"ruleId":"62","severity":1,"message":"86","line":138,"column":11,"nodeType":"64","messageId":"65","endLine":138,"endColumn":29},{"ruleId":"62","severity":1,"message":"87","line":11,"column":22,"nodeType":"64","messageId":"65","endLine":11,"endColumn":33},{"ruleId":"62","severity":1,"message":"63","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":16},{"ruleId":"62","severity":1,"message":"88","line":5,"column":13,"nodeType":"64","messageId":"65","endLine":5,"endColumn":21},{"ruleId":"62","severity":1,"message":"89","line":15,"column":12,"nodeType":"64","messageId":"65","endLine":15,"endColumn":19},{"ruleId":"67","severity":1,"message":"90","line":27,"column":8,"nodeType":"69","endLine":27,"endColumn":10,"suggestions":"91"},{"ruleId":"73","severity":1,"message":"74","line":65,"column":65,"nodeType":"75","messageId":"76","endLine":65,"endColumn":67},{"ruleId":"67","severity":1,"message":"92","line":78,"column":8,"nodeType":"69","endLine":78,"endColumn":26,"suggestions":"93"},"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'atom' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setSelectedLocation'. Either include it or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has missing dependencies: 'selectedLocation' and 'setSelectedLocation'. Either include them or remove the dependency array.",["95"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'isDragging' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'preview'. Either include it or remove the dependency array.",["96"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'getFileFromInput' is assigned a value but never used.","'manageUploadedFile' is assigned a value but never used.","'setProgress' is assigned a value but never used.","'tempData' is defined but never used.","'request' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'api'. Either include it or remove the dependency array.",["97"],"React Hook useEffect has missing dependencies: 'api' and 'setRequest'. Either include them or remove the dependency array.",["98"],{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [selectedAlarm, locations, setSelectedLocation]",{"range":"109","text":"110"},"Update the dependencies array to be: [alarms, locations, selectedLocation, setSelectedLocation]",{"range":"111","text":"112"},"Update the dependencies array to be: [preview]",{"range":"113","text":"114"},"Update the dependencies array to be: [api]",{"range":"115","text":"116"},"Update the dependencies array to be: [api, selectedLocation, setRequest]",{"range":"117","text":"118"},[1293,1319],"[selectedAlarm, locations, setSelectedLocation]",[1960,1979],"[alarms, locations, selectedLocation, setSelectedLocation]",[1376,1378],"[preview]",[1017,1019],"[api]",[3252,3270],"[api, selectedLocation, setRequest]"]